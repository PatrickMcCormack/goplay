=== RUN   TestLRUCache
--- PASS: TestLRUCache (0.00s)
	LRUCache_test.go:7: Testing LRU Cache functionality
	LRUCache_test.go:12: ==Start: Initialize Cache
	LRUCache_test.go:14: ==Completed: Initialize Cache
	LRUCache_test.go:17: ==Start: Insert first element
	LRUCache_test.go:19: ==Completed: Insert first element
	LRUCache_test.go:22: ==Start: Find first element
	LRUCache_test.go:24: Value1
	LRUCache_test.go:25: ==Completed: Find first element
	LRUCache_test.go:28: ==Start: Insert second element
	LRUCache_test.go:30: ==Completed: Insert second element
	LRUCache_test.go:33: ==Start: Find second element
	LRUCache_test.go:35: Value2
	LRUCache_test.go:36: ==Completed: Find second element
	LRUCache_test.go:39: ==Start: Test TTL reset on Append to existing entry
	LRUCache_test.go:43: element Key1
	LRUCache_test.go:43: element Key2
	LRUCache_test.go:46: ------
	LRUCache_test.go:52: element Key2
	LRUCache_test.go:52: element Key1
	LRUCache_test.go:56: Finished Testing Linked List functionality
=== RUN   TestComparators
--- PASS: TestComparators (0.00s)
	comparator_test.go:6: Testing Comparator functionality
	comparator_test.go:9: ==Start: Testing IntComparator
	comparator_test.go:12: IntComparator: -1 expected, got -1
	comparator_test.go:19: IntComparator: 0 expected, got 0
	comparator_test.go:26: IntComparator: 1 expected, got 1
	comparator_test.go:32: ==Completed: Testing IntComparator
	comparator_test.go:35: ==Start: Testing StringComparator
	comparator_test.go:38: StringComparator: -1 expected, got -1
	comparator_test.go:45: StringComparator: 0 expected, got 0
	comparator_test.go:52: StringComparator: 1 expected, got 1
	comparator_test.go:58: ==Completed: Testing StringComparator
	comparator_test.go:61: Done Testing Comparator functionality
=== RUN   TestDlist
--- PASS: TestDlist (0.00s)
	dlist_test.go:15: Testing Double Linked List functionality
	dlist_test.go:24: ==Start: Append 1 element and Delete
	dlist_test.go:35: ==Completed: Append 1 element and Delete
	dlist_test.go:38: ==Start: Append all test elements
	dlist_test.go:9: element 0: This
	dlist_test.go:9: element 1: is
	dlist_test.go:9: element 2: a
	dlist_test.go:9: element 3: dlinked-list
	dlist_test.go:9: element 4: yey!
	dlist_test.go:48: ==Compeleted: Append all tests elements
	dlist_test.go:51: ==Start: Delete head from n element list, where n > 1
	dlist_test.go:9: element 0: is
	dlist_test.go:9: element 1: a
	dlist_test.go:9: element 2: dlinked-list
	dlist_test.go:9: element 3: yey!
	dlist_test.go:60: ==Compeleted: Delete head from n element list, where n > 1
	dlist_test.go:63: ==Start: Delete tail from n element list, where n > 1
	dlist_test.go:9: element 0: is
	dlist_test.go:9: element 1: a
	dlist_test.go:9: element 2: dlinked-list
	dlist_test.go:71: ==Compeleted: Delete tail from n element list, where n > 1
	dlist_test.go:74: ==Start: Test Iterator
	dlist_test.go:78: element 0: is, expecting is
	dlist_test.go:78: element 1: a, expecting a
	dlist_test.go:78: element 2: dlinked-list, expecting dlinked-list
	dlist_test.go:89: ==Compeleted: Test Iterator
	dlist_test.go:92: ==Start: Delete remaining elements
	dlist_test.go:101: ==Compeleted: Delete remaining elements
	dlist_test.go:104: ==Start: Append after deleing all elements
	dlist_test.go:9: element 0: &{This <nil> 0xc8200711e0}
	dlist_test.go:111: ==Compeleted: Append after deleing all elements
	dlist_test.go:114: Finished Testing Double Linked List functionality
=== RUN   TestHashtable
--- PASS: TestHashtable (0.00s)
	hastable_test.go:10: Testing Hashtable functionality
	hastable_test.go:13: ==Start: Creating HT, insert an element, retrieve & check element
	hastable_test.go:20: Got Extreme Ways, expecting Extreme Ways
	hastable_test.go:32: Got The Bends, expecting The Bends
	hastable_test.go:55: Got Extreme Ways, nil
	hastable_test.go:61: ==Completed: Creating HT, insert an element, retrieve & check element
	hastable_test.go:64: Done testing Hashtable functionality
=== RUN   TestHeap
[50 <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil>]
[80 50 <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil>]
[90 50 80 <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil> <nil>]
50
--- PASS: TestHeap (0.00s)
	heap_test.go:10: ==Start: Testing Heap functionality
	heap_test.go:22: ==Completed: Testing Heap functionality
=== RUN   TestLinkedList
--- PASS: TestLinkedList (0.00s)
	linkedlist_test.go:17: Testing Linked List functionality
	linkedlist_test.go:25: ==Start: Insert 1 element and delete
	linkedlist_test.go:36: ==Completed: Insert 1 element and delete
	linkedlist_test.go:39: ==Start: Insert all test elements
	linkedlist_test.go:47: ==Compeleted: Insert all tests elements
	linkedlist_test.go:50: ==Start: Delete head from n element list, where n > 1
	linkedlist_test.go:57: ==Compeleted: Delete head from n element list, where n > 1
	linkedlist_test.go:60: ==Start: Delete tail from n element list, where n > 1
	linkedlist_test.go:67: ==Compeleted: Delete tail from n element list, where n > 1
	linkedlist_test.go:70: ==Start: Test Iterator
	linkedlist_test.go:74: element 0: is, expecting is
	linkedlist_test.go:74: element 1: a, expecting a
	linkedlist_test.go:85: ==Compeleted: Test Iterator
	linkedlist_test.go:88: ==Start: Delete remaining elements
	linkedlist_test.go:95: ==Compeleted: Delete remaining elements
	linkedlist_test.go:98: ==Start: Insert after deleing all elements
	linkedlist_test.go:104: ==Compeleted: Insert after deleing all elements
	linkedlist_test.go:9: element 0: This
	linkedlist_test.go:109: Finished Testing Linked List functionality
=== RUN   TestQueue
--- PASS: TestQueue (0.00s)
	queue_test.go:6: Testing Queue functionality
	queue_test.go:13: ==Start: Pushing 1 Element
	queue_test.go:19: ==Completed: Pushing 1 Element
	queue_test.go:22: ==Start: Popping an element from a queue of size 1
	queue_test.go:24: Popped Test Element from queue
	queue_test.go:29: ==Completed: Popping an element from a queue of size 1
	queue_test.go:32: ==Start: Push several element on to the queue
	queue_test.go:40: ==Completed: Push several element on to the queue
	queue_test.go:43: ==Start: Peeking at the head of the queue
	queue_test.go:46: Peeked "1" from queue
	queue_test.go:55: ==Completed: Peeking at the head of the queue
	queue_test.go:58: ==Start: Pop all elemement from the queue
	queue_test.go:63: Pop element 1
	queue_test.go:63: Pop element 2
	queue_test.go:63: Pop element 3
	queue_test.go:73: ==Completed: Pop all elemement from the queue
	queue_test.go:76: Done testing Queue functionality
=== RUN   TestStack
--- PASS: TestStack (0.00s)
	stack_test.go:6: Testing Stack functionality
	stack_test.go:13: ==Start: Pushing 1 Element
	stack_test.go:19: ==Completed: Pushing 1 Element
	stack_test.go:22: ==Start: Popping an element from a stack of size 1
	stack_test.go:24: Popped Test Element from stack
	stack_test.go:29: ==Completed: Popping an element from a stack of size 1
	stack_test.go:32: ==Start: Push several element on to the stack
	stack_test.go:40: ==Completed: Push several element on to the stack
	stack_test.go:43: ==Start: Peeking at the head of the stack
	stack_test.go:46: Peeked "3" from stack
	stack_test.go:55: ==Completed: Peeking at the head of the stack
	stack_test.go:58: ==Start: Pop all elemement from the stack
	stack_test.go:68: Pop element 3
	stack_test.go:68: Pop element 2
	stack_test.go:68: Pop element 1
	stack_test.go:78: ==Completed: Pop all elemement from the stack
	stack_test.go:81: Done testing Stack functionality
=== RUN   TestInsertRootNode
--- PASS: TestInsertRootNode (0.00s)
	tree_test.go:13: ==Start: Insert Root Node, test Size and Depth
	tree_test.go:16: The size of the tree is: 1
	tree_test.go:17: The max depth is: 1
	tree_test.go:28: ==Completed: Insert Root Node, test Size and Depth
=== RUN   TestSmallTreeForSizeAndDepth
--- PASS: TestSmallTreeForSizeAndDepth (0.00s)
	tree_test.go:33: ==Start: Insert more nodes and test size and depth
	tree_test.go:38: The size of the tree is: 7
	tree_test.go:39: The max depth is: 4
	tree_test.go:50: ==Completed: Insert more nodes and test size and depth
=== RUN   TestIteratorsDriver
--- PASS: TestIteratorsDriver (0.00s)
	tree_test.go:55: ==Start: TestIteratorsDriver
	tree_test.go:64: ==Start: Insert data, iterate in PreOrder, check order is correct
	tree_test.go:81: iterator: 10, GoldenData: 10
	tree_test.go:81: iterator: 1, GoldenData: 1
	tree_test.go:81: iterator: 5, GoldenData: 5
	tree_test.go:81: iterator: 4, GoldenData: 4
	tree_test.go:81: iterator: 15, GoldenData: 15
	tree_test.go:81: iterator: 13, GoldenData: 13
	tree_test.go:81: iterator: 20, GoldenData: 20
	tree_test.go:89: ==Completed: Insert data, iterate in PreOrder, check order is correct
	tree_test.go:64: ==Start: Insert data, iterate in InOrder, check order is correct
	tree_test.go:81: iterator: 1, GoldenData: 1
	tree_test.go:81: iterator: 4, GoldenData: 4
	tree_test.go:81: iterator: 5, GoldenData: 5
	tree_test.go:81: iterator: 10, GoldenData: 10
	tree_test.go:81: iterator: 13, GoldenData: 13
	tree_test.go:81: iterator: 15, GoldenData: 15
	tree_test.go:81: iterator: 20, GoldenData: 20
	tree_test.go:89: ==Completed: Insert data, iterate in InOrder, check order is correct
	tree_test.go:64: ==Start: Insert data, iterate in PostOrder, check order is correct
	tree_test.go:81: iterator: 4, GoldenData: 4
	tree_test.go:81: iterator: 5, GoldenData: 5
	tree_test.go:81: iterator: 1, GoldenData: 1
	tree_test.go:81: iterator: 13, GoldenData: 13
	tree_test.go:81: iterator: 20, GoldenData: 20
	tree_test.go:81: iterator: 15, GoldenData: 15
	tree_test.go:81: iterator: 10, GoldenData: 10
	tree_test.go:89: ==Completed: Insert data, iterate in PostOrder, check order is correct
	tree_test.go:59: ==Completed: TestIteratorsDriver
=== RUN   TestRecursiveFunctionsDriver
--- PASS: TestRecursiveFunctionsDriver (0.00s)
	tree_test.go:94: ==Start: TestRecursiveFunctionsDriver
	tree_test.go:103: ==Start: Insert data, iterate in PreOrder, check order is correct
	tree_test.go:126: Iterator: 10, GoldenData: 10
	tree_test.go:126: Iterator: 1, GoldenData: 1
	tree_test.go:126: Iterator: 5, GoldenData: 5
	tree_test.go:126: Iterator: 4, GoldenData: 4
	tree_test.go:126: Iterator: 15, GoldenData: 15
	tree_test.go:126: Iterator: 13, GoldenData: 13
	tree_test.go:126: Iterator: 20, GoldenData: 20
	tree_test.go:134: ==Completed: Insert data, iterate in pre-order, check order is correct
	tree_test.go:103: ==Start: Insert data, iterate in InOrder, check order is correct
	tree_test.go:126: Iterator: 1, GoldenData: 1
	tree_test.go:126: Iterator: 4, GoldenData: 4
	tree_test.go:126: Iterator: 5, GoldenData: 5
	tree_test.go:126: Iterator: 10, GoldenData: 10
	tree_test.go:126: Iterator: 13, GoldenData: 13
	tree_test.go:126: Iterator: 15, GoldenData: 15
	tree_test.go:126: Iterator: 20, GoldenData: 20
	tree_test.go:134: ==Completed: Insert data, iterate in pre-order, check order is correct
	tree_test.go:103: ==Start: Insert data, iterate in PostOrder, check order is correct
	tree_test.go:126: Iterator: 4, GoldenData: 4
	tree_test.go:126: Iterator: 5, GoldenData: 5
	tree_test.go:126: Iterator: 1, GoldenData: 1
	tree_test.go:126: Iterator: 13, GoldenData: 13
	tree_test.go:126: Iterator: 20, GoldenData: 20
	tree_test.go:126: Iterator: 15, GoldenData: 15
	tree_test.go:126: Iterator: 10, GoldenData: 10
	tree_test.go:134: ==Completed: Insert data, iterate in pre-order, check order is correct
	tree_test.go:98: ==Completed: TestRecursiveFunctionsDriver
=== RUN   TestTrie
AABBCCDDEFGHIJKLMNOPQRSTUVWXYZXXXX
AABBCCDDEFGHIJKLMNOPQRSTUVWXYAXXXX
AABDXXXX
--- PASS: TestTrie (0.00s)
	trie_test.go:9: Testing Trie functionality
	trie_test.go:14: ==Start: Some Test
	trie_test.go:35: Not found
	trie_test.go:41: Not found
	trie_test.go:49: ==Completed: Some Test
	trie_test.go:56: Done testing Trie functionality
PASS
ok  	_/Users/patrick/Documents/github/PatrickMcCormack/goplay/collections	0.008s
